package 평가1_서술형;
// 1. 변수명 짓기 : 대소문자, 특수문자(_,$), 숫자 가능(앞에 오면 안됨)
// 예약어 사용하면 안됨, 이름 사이에 공백이 오면 안됨, 길이제한 없음
// 복합명사 사용 시 첫번째는 소문자, 다음에 오는 단어 부터는 대문자(camel 표기법)
// 사용목적에 맞게끔 이름을 지어야 함
// 2. 변수 선언 시 사용되는 자료형별 메모리 할당 크기 확인
// 3. 변수란?? 하나의 값을 저장하기 위한 공간
// 4. 기본 자료형 변수와 참조 자료형 변수의 차이점
// - 기본 자료형 : 실제 자료형에 값을 저장하는 것(boolean, byte, char, int......)
// - 참조 자료형 : 실제 값을 저장하지 않고 값이 있는 주소를 저장 함(Sting, 배열, 객체)
// 5. 상수란? 한번 만 값을 저장할 수 있는 변수
// 6. 문자열을 담는 변수를 만들고 문자열 대입 하기 (String str = "Java";)
// 7. 자동 형 변환 : 데이터 타입이 다른 경우 유리한 방향(즉, 작은것과 큰 것이 있을 때 큰 쪽으로 맞춤)
// 8. 강제 형 변환 : 값의 범위가 큰 것에서 작은 것으로 변경 할 때..(개발자가 의도를 가지고 변경 하는 것)
// 9. 단항연산자 : !(현재값을 부정),++(변수값을 1증가), --(변수값을 1감소), +34, -34, ~(비트 부호를 반전 시킴)
// 10. 다항연산자 : (산술연산자 +, -, *, /, %), 비교연산자(>,< >=, <=, !=, ==),
// 논리연산자(&&, ||), 비트연산자(&(둘다 1이면 1), |(둘 중 하나만 1이면 1), ^(xor 값이 다르면 1)
// 11. 산술연산자에서 각 연산자의 의미 (+더한값을 반환, -뺀값을 반환, *곱해서 반환, /나눈 값을 반환,
// %나눈 나머지를 반환)
// 12. 단항연산자 중 ++, -- : 증감연산자(변수의 값을 1을 더하거나 1을 뺀다)
// 13. 논리연산자 && 둘 다 참이어야 참, || 둘 중 하나만 참이면 참
// 14. 전위 연산자 : 먼저 값을 증가하고 대입이 이루어 짐, 후위 연산자는 대입하고 증가가 이루어짐
// 15. 논리 연산자 확인 문제
// 16. 연산 결과가 논리(true/false) 값이 나오는 연산자를 네 가지 쓰시오.(논리/비교연산자 전부) (<,!=, ==, &&, ||, >=. <=)
// 17. 연산자 우선 순위 기술 [산술연산자, 삼항연산자, 논리연산자, 최우선연산자, 대입연산자]
//      => 최우선연산자() -> 산술연산자 -> 논리연산자 -> 삼항연산자 -> 대입연산자
// 18. 삼항연산자 설명 : 조건식에서 참과 거짓만 있는 경우 삼항연산자로 표현 가능
// (조건식) ? 참인 경우 수행 : 거짓인 경우 수행;
// 19. 조건문의 종류를 쓰시오. (if, switch)
// 20. 반복문의 종류를 쓰시오. (for, while)
// 21. if(조건식) : 논리와 값, 실제 사용되는 형태를 기술해도 정답으로 간주
// 22. switch(값) : 정수, 문자, 문자열
// 23. 코딩 결과 확인 문제 : 1 ~ 5까지 수행하는 반복문
// 24. 코딩 결과 확인 문제(for) : 구구단 출력 문제(2단만 출력), for문의 반복 수행 범위 확인
public class Test1Main {
    public static void main(String[] args) {
        for(int i = 1; i < 10; i++) { // 여기서 묻는 문제는 반복문의 범위를 확인하는 문제 임
            System.out.println(2 + "*" + i + "=" + (2*i));
        }


    }
}
